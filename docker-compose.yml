version: "3.9"
services:
  postgres:
    image: postgres:alpine
    container_name: postgres
    environment:
      POSTGRES_USER: "${POSTGRES_USER}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_DB: "${POSTGRES_DB}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - db-socket:/var/run/postgresql
    restart: unless-stopped

  redis:
    image: redis:alpine
    container_name: redis
    environment:
      REDIS_CONFIG: |
        unixsocket /var/run/redis/redis.sock
        unixsocketperm 777
    command:
      sh -c "echo \"$$REDIS_CONFIG\" > /etc/redis.conf && redis-server /etc/redis.conf"
    volumes:
      - redis-data:/data
      - redis-socket:/var/run/redis
    restart: unless-stopped

  tunnelquestbot:
    image: ghcr.io/jamesjamail/tunnelquestbot/prod/tunnelquestbot:latest
    container_name: tunnelquestbot
    depends_on:
      - postgres
      - redis
    environment:
      SERVERS_BLUE_LOG_FILE_PATH: "/logfiles/${SERVERS_BLUE_LOG_FILE}"
      SERVERS_GREEN_LOG_FILE_PATH: "/logfiles/${SERVERS_GREEN_LOG_FILE}"
      SERVERS_RED_LOG_FILE_PATH: "/logfiles/${SERVERS_RED_LOG_FILE}"
      REDIS_SOCKET_DIR: "${REDIS_SOCKET_DIR}"
      FAKE_LOGS: "${FAKE_LOGS:-false}"
    volumes:
      - type: bind
        source: "/run/desktop/mnt/host/${LOG_SOURCE_PATH}"
        target: /logfiles
      - type: bind
        source: ".env"
        target: /app/.env
      - "db-socket:${DB_SOCKET_DIR}"
      - "redis-socket:${REDIS_SOCKET_DIR}"
    restart: always

volumes:
  postgres-data:
  db-socket:
  redis-socket:
  redis-data:
